# volumn required:
# /var/log
# /opt/nginx/conf/   place other config files in this directory

#当前用户及用户组
#user root root;

# Recommended: General Settings / Error Log (Tune for Environment)
# - You should decrease log level in production and/or implement log rotation!
# - Nginx Log Levels: debug, info, notice, warn, error, crit, alert, emerg
error_log                        /var/log/error.log  error;
working_directory                /opt/nginx/;                


#工作进程数

# Recommended: General Settings / Worker Processes (Tune for Environment)
worker_processes                 auto;      # Omit/Use 1 for Testing
pid /opt/nginx/conf/nginx.pid;
##worker_rlimit_core               500M;      # Enable Core Files
worker_rlimit_nofile 65535;


# EXPERIMENTAL: Cloud Gate Dynamic Module (edit path to correct location)
# Warning: Must be set if-and-only-if using the Dynamic Module edition!
# load_module                      /u01/data/idcs-cloudgate/lib/idcs_cloudgate_ngx.so;


events {
    #使用的网络I/O模型，linux为epoll, FreeBSD为kqueue
    use epoll;

    #允许的连接数
    worker_connections 16384;  #单个后台worker process进程的最大并发链接数
    
    #you can utilize multi_accept in order for a worker to accept all new connections at one time.
    multi_accept on;
}

#设定http服务器
http {

    # Required: Headers with Underscores
    underscores_in_headers         on;

    # Recommended: Tuning (Unofficial - Use At Your Own Risk)
    proxy_buffer_size              16k;
    proxy_buffers                  4 128k;
    proxy_busy_buffers_size        256k;
    proxy_read_timeout             300s;
    proxy_headers_hash_bucket_size 256;
    client_header_buffer_size      4k;
    server_names_hash_bucket_size  512;
    server_names_hash_max_size     2048;
    variables_hash_bucket_size     512;
    variables_hash_max_size        2048;
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 60m;
    keepalive_timeout              60s;     #连接超时时间
    keepalive_requests             2000000;
    open_file_cache max=2000 inactive=20s;   #max:设置最大文件描述符的数量，如果超出时使用LRU算法，将最少使用的数据清出内存, inactive: 在设置的时间内没有使用此文件描述符时，自动删除。
    open_file_cache_valid 60s;               #设定检测周期，查看日志文件及目录是否存在
    open_file_cache_min_uses 5;              #在inactive时间内，如果日志使用次数超过指定值。则将该日志的文件描述符计入缓存
    open_file_cache_errors off;
    server_tokens off;

    ##
    # Basic Settings
    ##

    #disable_symlinks off;

    #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，
    #必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile on;

    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;
    # server_names_hash_bucket_size 64;
    
    #如果port_in_redirect为off时，那么始终按照默认的80端口；如果该指令打开，那么将会返回当前正在监听的端口。
    #如果server_name_in_redirect为off时，那么将会以当前服务器的IP地址进行拼接URL；如果该命令为on，那么首先查找server_name，
    #如果没有找到，查找请求头的HOST字段，如果没有，则以当前服务器的IP进行拼接
    server_name_in_redirect off;

    #以下为优化参数
    client_body_buffer_size    128k;
    client_max_body_size       100m;  #能够上传的文件大小
    large_client_header_buffers  4 4k;
    output_buffers   1 32k;
    postpone_output  1460;

    client_header_timeout  3m;
    client_body_timeout    3m;
    send_timeout           3m;

    #与cache有关， How to Configure Nginx for Optimized Performance

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    #log_format compression '"$remote_addr" "-" "$remote_user" [$time_local] "$request" "$status" "$body_bytes_sent" "$http_referer" "$http_user_agent" "$bytes_sent" #"$request_length" "$resolve_id" "$host" "$http_x_forwarded_for" "$server_name" "$server_port" "$request_time" "$upstream_addr" "$upstream_connect_time" "$upstream_header_time" #"$upstream_response_time" "$upstream_status" "$ssl_cipher" "$ssl_protocol" "-" "-" "-"';

    
    ##
    # Logging Settings # [ debug | info | notice | warn | error | crit | alert | emerg ]
    ##
    #日志格式设定
    log_format access '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" $http_x_forwarded_for';

    access_log /var/log/access.log access;
    error_log /var/log/error.log error;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";
    gzip_min_length  500;
    gzip_buffers     16 8k;
    gzip_types     text/plain text/css text/javascript text/xml application/x-javascript application/xml application/json application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype    application/x-font-ttf font/eot font/opentype font/otf image/svg+xml image/vnd.microsoft.icon;
    gzip_disable "MSIE [1-6]\.";

    gzip_vary on;
    gzip_comp_level 7;

    ##
    # nginx-naxsi config
    ##
    # Uncomment it if you installed nginx-naxsi
    ##

    #include /etc/nginx/naxsi_core.rules;

    ##
    # nginx-passenger config
    ##
    # Uncomment it if you installed nginx-passenger
    ##
    
    #passenger_root /usr;
    #passenger_ruby /usr/bin/ruby;

    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    #SSL/TLS certificates
    ssl_certificate  /opt/nginx/conf/server.crt;
    ssl_certificate_key  /opt/nginx/conf/server.key;
    
    #include /opt/nginx/conf/h-*.conf
    
    upstream oracle {
        ip_hash;
        
        #upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表示权值，权值越高被分配到的几率越大。
        #server :80 weight=3;
        #server 172.17.42.1:8080 weight=1 max_fails=2 fail_timeout=30s;
        server  www.oracle.com:443 weight=1 max_fails=2 fail_timeout=30s;
    }
    
    server {
        listen 8080;
        server_name localhost;

        location / {
            proxy_pass https://localhost;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }

    server
    {
        listen          443 ssl;
        server_name     ~^.*$;
        
        #对应域名或IP需要在http://server_name中体现的值,其中172.17.42.1为该nginx在docker容器中的IP地址。当使用docker后，如果在相同的Host上对容器内的web请求，其地址是172.17.42.1而非127.0.0.1
        #server_name      172.17.0.2 172.17.0.1 192.168.3.3;
        
        #only enable TLSv1.2 and specify the mandatory ciphers for use
        ssl_protocols TLSv1.2;
        ssl_prefer_server_ciphers on; ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;
        
        
        proxy_set_header Host       $http_host;   # required for Docker client sake
        proxy_set_header X-Real-IP  $remote_addr; # pass on real client IP

        
        index           index.html index.htm;
        root            /opt/webapp;
        
        # include other config files
        #include                      nginx-cg.conf;
        
        location / {
            proxy_pass         http://oracle/;
            proxy_redirect     off;
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            
            proxy_connect_timeout      60;
            proxy_send_timeout         60;
            proxy_read_timeout         60;
            proxy_buffer_size          4k;
            proxy_buffers              4 32k;
            proxy_busy_buffers_size    64k;
            proxy_temp_file_write_size 64k;
            #proxy_temp_path            /home/nginx/proxy_temp;
            
            #当NGINX收到服务器返回的error，timeout或者其他指定的5xx错误，并且在其缓存中有请求文件的陈旧版本，则会将这些陈旧版本的文件而不是错误信息发送给客户端
            #proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            
            #expires 3d;
            #expires -1;
        }

        # 定义错误提示页面
        error_page   500 502 503 504 /50x.html;
        location = /50x.html {
            root   /opt/webapp;
        }
        
        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma)$
        {
            expires 15d;
        }

        location ~ .*\.(html|htm|js|css)$
        {
            #禁止缓存
            expires 1h;
        }
        
        location ~ ^/(WEB-INF)/ {   
            deny all;   
        }
    }
}


#mail {
#    # See sample authentication script at:
#    # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#    # auth_http localhost/auth.php;
#    # pop3_capabilities "TOP" "USER";
#    # imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#    server {
#        listen     localhost:110;
#        protocol   pop3;
#        proxy      on;
#    }
#
#    server {
#        listen     localhost:143;
#        protocol   imap;
#        proxy      on;
#    }
#}
