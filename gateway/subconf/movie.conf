
    upstream movie {
        ip_hash;
        
        #upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表示权值，权值越高被分配到的几率越大。
        #server 172.17.42.1:8080 weight=1 max_fails=2 fail_timeout=30s;
        server movie:80 weight=1 max_fails=2 fail_timeout=30s;
    }

    # redirect http request on 80 to 443 port
    server {
        listen 80;
        server_name movie.jujucome.cn;
        #rewrite ^(.*)$ https://${server_name}$1 permanent; 
        return 301 https://$server_name$request_uri;
    }

    server
    {
        #listen 80;
        listen          443 ssl;
        server_name     movie.jujucome.cn;
        
        #对应域名或IP需要在http://server_name中体现的值,其中172.17.42.1为该nginx在docker容器中的IP地址。当使用docker后，如果在相同的Host上对容器内的web请求，其地址是172.17.42.1而非127.0.0.1
        #server_name      172.17.0.2 172.17.0.1 192.168.3.3;
   
        #SSL/TLS certificates
        ssl_certificate  /opt/nginx/conf/certs/movie_server.crt;
        ssl_certificate_key  /opt/nginx/conf/certs/movie_server.key;
        include /opt/nginx/conf/extra/ssl_*.conf;
        
        proxy_set_header Host       $http_host;   # required for Docker client sake
        proxy_set_header X-Real-IP  $remote_addr; # pass on real client IP

        location / {
            root   html;
            index  index.html index.htm;
            proxy_pass         http://movie;
            proxy_redirect     off;
    
            include  /opt/nginx/conf/extra/server_*.conf;
            #expires 3d;
            #expires -1;
        }


        # 定义错误提示页面
        error_page   500 502 503 504 /50x.html;
        #location = /50x.html {
        #    root   /opt/webapp;
        #}
        
        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma)$
        {
            expires 1d;
        }

        location ~ .*\.(html|htm|js|css)$
        {
            #禁止缓存
           expires 1h;
        }
        
        location ~ ^/(WEB-INF)/ {   
            deny all;   
        }
    }

