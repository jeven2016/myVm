
    upstream movie {
        ip_hash;
        
        #upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表示权值，权值越高被分配到的几率越大。
        #server 172.17.42.1:8080 weight=1 max_fails=2 fail_timeout=30s;
        server movie:80 weight=1 max_fails=2 fail_timeout=30s;
    }

    server
    {
        listen          443 ssl;
        server_name     movie.jujucome.cn;
        
        #对应域名或IP需要在http://server_name中体现的值,其中172.17.42.1为该nginx在docker容器中的IP地址。当使用docker后，如果在相同的Host上对容器内的web请求，其地址是172.17.42.1而非127.0.0.1
        #server_name      172.17.0.2 172.17.0.1 192.168.3.3;
        
        #only enable TLSv1.2 and specify the mandatory ciphers for use
        ssl_protocols TLSv1.2;
        ssl_prefer_server_ciphers on; ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;
        
        
        proxy_set_header Host       $http_host;   # required for Docker client sake
        proxy_set_header X-Real-IP  $remote_addr; # pass on real client IP

        
        index           index.html index.htm;
        root            /opt/webapp;
        
        # include other config files
        #include                      nginx-cg.conf;
    

        # 定义错误提示页面
        error_page   500 502 503 504 /50x.html;
        location = /50x.html {
            root   /opt/webapp;
        }
        
        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma)$
        {
            expires 15d;
        }

        location ~ .*\.(html|htm|js|css)$
        {
            #禁止缓存
            expires 1h;
        }
        
        location ~ ^/(WEB-INF)/ {   
            deny all;   
        }
    }
}
